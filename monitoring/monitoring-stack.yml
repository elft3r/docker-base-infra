version: "3.9"

services:
  prometheus:
    image: prom/prometheus:v2.33.4
    hostname: prometheus
    configs:
      - source: prometheus_yml_v1
        target: /etc/prometheus/prometheus.yml
      - source: alert_rules_v0
        target: /etc/prometheus/alert.rules
    volumes:
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == nuc-00
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=false
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:8.4.2
    hostname: grafana
    ports:
      - 3000:3000
    user: "1000"
    volumes:
      - /home/elft3r/volumes/grafana/:/var/lib/grafana
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == nuc-00
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=false
    networks:
      - monitoring

  alertmanager:
    image: prom/alertmanager:v0.23.0
    hostname: alertmanager
    ports:
      - 9093:9093
    volumes:
      - /home/elft3r/volumes/alertmanager/:/etc/alertmanager/
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == nuc-00
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=false
    networks:
      - monitoring

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - target: 9100
        published: 9100
        mode: host
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=false
    networks:
      - monitoring

  cadvisor:
    image: jmb12686/cadvisor:v1.37.5
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - target: 8080
        published: 8080
        mode: host
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=false
    networks:
      - monitoring

configs:
  prometheus_yml_v1:
    file: ./prometheus/prometheus.yml
  alert_rules_v0:
    file: ./prometheus/alert.rules

volumes:
  prometheus_data: {}

networks:
  monitoring:
