---
name: Deploy Traefik Stack

on:
  push:
    branches: [main]
    paths: [traefik/**, .github/workflows/traefik-deploy.yml]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Configure Docker for Multi-Arch Images
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2.1.6
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Login to DockerHub when no pull request
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Configure the Docker Image Meta Data
      - name: Docker Meta
        id: docker_meta
        uses: docker/metadata-action@v3.4.1
        with:
          # list of Docker images to use as base name for tags
          images: |
            elft3r/swarm-traefik
          flavor: |
            latest=false
          tags: |
            type=raw,value=latest

      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v2.6.1
        with:
          context: traefik/
          platforms: linux/arm/v7
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

  deploy:
    name: Deploy Traefik Stack
    needs: build
    runs-on: self-hosted
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Deploy Traefik Stack
        run: |
          docker stack deploy -c traefik/traefik-stack.yml traefik
